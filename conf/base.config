// vim: set filetype=nextflow

/*
 * A 'blank slate' config file, appropriate for general
 * use on most high performace compute environments.
 * Assumes that all software is installed and available
 * on the PATH. Runs in `local` mode - all jobs will be
 * run on the logged in environment.
 */


process {
    cpus = { check_max(2, 'cpus' ) }
    memory = { check_max( 8.GB * task.attempt, 'memory' ) }
    time = { check_max( 4.h * task.attempt, 'time' ) }

    errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'terminate' }
    maxRetries = 1
    maxErrors = -1

    // Capture exit codes from upstream processes when piping
    shell = ['/bin/bash', '-euo', 'pipefail']

    // Process-specific resource reqs
    withLabel: low_memory {
        memory = { check_max( 16.GB * task.attempt, 'memory' ) }
        time = { check_max(12.h * task.attempt, 'time' ) }
    }
    withLabel: mid_memory {
        memory = { check_max( 32.GB * task.attempt, 'memory' ) }
        time = { check_max( 12.h * task.attempt, 'time' ) }
    }
    withLabel: high_memory {
        memory = { check_max( 80.GB * task.attempt, 'memory' ) }
        time = { check_max( 12.h * task.attempt, 'time' ) }
    }

    withLabel: low_cpu {
        cpus = { check_max( 16 ,'cpus' ) }
        time = { check_max(12.h * task.attempt, 'time' ) }
    }
    withLabel: mid_cpu {
        cpus = { check_max( 32, 'cpus' ) }
        time = { check_max( 12.h * task.attempt, 'time' ) }
    }
    withLabel: high_cpu {
        cpus = { check_max( 64, 'cpu' ) }
        time = { check_max( 12.h * task.attempt, 'time' ) }
    }
}

params {
    // Defaults only, expecting to be overwritten
    max_memory = 128.GB
    max_cpus = 128
    max_time = 48.h
}
